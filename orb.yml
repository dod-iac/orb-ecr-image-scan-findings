version: 2.1

description:  Scans the uploaded ECR image and outputs the findings

display:
  home_url: https://dds.mil/
  source_url: https://github.com/dod-iac/orb-ecr-image-scan-findings

orbs:
  aws-cli: circleci/aws-cli@1.4.0
  jq: circleci/jq@2.2.0

commands:
  scan:
    description: Scans the uploaded ECR image and outputs the findings
    parameters:
      aws-role-arn:
        type: string
        description: The ARN of the role to assume. Must have IAM action ecr:DescribeImageScanFindings.
        default: ""
      aws-role-session-name:
        type: string
        description: An identifier for the assumed role session.
        default: "circleci"
      ecr-repository-name:
        type: string
        description: The name of the ECR repository where the image has been uploaded and scanned
      ecr-image-id:
        type: string
        description: An object with identifying information for an Amazon ECR image. Either 'imageDigest=string' or 'imageTag=string'.
    steps:
      - run:
          command: |
            if [[ -n "<< parameters.aws-role-arn >>" ]] && [[ -n "<< parameters.aws-role-session-name >>" ]]; then
              temp_role=$(aws sts assume-role \
                      --role-arn << parameters.aws-role-arn >> \
                      --role-session-name << parameters.aws-role-session-name >> )
              export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq .Credentials.AccessKeyId | xargs)
              export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq .Credentials.SecretAccessKey | xargs)
              export AWS_SESSION_TOKEN=$(echo $temp_role | jq .Credentials.SessionToken | xargs)
            fi

            get_findings() {
                findings=$(aws ecr describe-image-scan-findings --repository-name "<< parameters.ecr-repository-name >>" --image-id "<< parameters.ecr-image-id >>")
                echo "${findings}" | jq .
                echo
                status=$(echo "${findings}" | jq -r ".imageScanStatus.status")
                numberOfFindings=$(echo "${findings}" | jq -r ".imageScanFindings.findings | length")
            }

            # Get the results of the scan or wait until they are ready
            get_findings
            while [[ "${status}" == "IN_PROGRESS" ]]; do
                sleep 15
                get_findings
            done

            if [[ "${status}" != *COMPLETE* ]]; then
                echo "Scan does not appear COMPLETE"
                exit 1
            fi

            if [[ "${numberOfFindings}" -gt 0 ]]; then
                echo "Scan found ${numberOfFindings} findings!"
                exit 1
            fi

jobs:
  scan:
    parameters:
      aws-role-arn:
        type: string
        description: The ARN of the role to assume. Must have IAM action ecr:DescribeImageScanFindings.
        default: ""
      aws-role-session-name:
        type: string
        description: An identifier for the assumed role session.
        default: "circleci"
      ecr-repository-name:
        type: string
        description: The name of the ECR repository where the image has been uploaded and scanned
      ecr-image-id:
        type: string
        description: An object with identifying information for an Amazon ECR image. Either 'imageDigest=string' or 'imageTag=string'.
    executor: main
    steps:
      - aws-cli/setup
      - jq/install
      - scan:
          aws-role-arn: << parameters.aws-role-arn >>
          aws-role-session-name: << parameters.aws-role-session-name >>
          ecr-repository-name: << parameters.ecr-repository-name >>
          ecr-image-id: << parameters.ecr-image-id >>

executors:
  main:
    docker:
      - image: cimg/base:2020.10